{"version":3,"file":"static/js/102.66ef269c.chunk.js","mappings":"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","sources":["services/film-library-api.js","services/getStateMachineStatus.js","webpack://goit-react-hw-05-movies/./src/components/FilmsCard/FilmsCard.module.css?b3f4","components/FilmsCard/FilmsCard.js","views/MoviesDetailsView.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c7ed46652640bc5a91d5a4e73d915c28';\n\nasync function fetchWithErrorHandling(url = '', ) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularMovies() {\n  return fetchWithErrorHandling(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`);\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function fetchMoviesCast(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function fetchMoviesReviews(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n}\n","function getStateMachineStatus() {\r\n    return {\r\n        IDLE: 'idle',\r\n        PENDING: 'pending',\r\n        REJECT: 'reject',\r\n        RESOLVE: 'resolve'\r\n    }\r\n}\r\n\r\nexport default getStateMachineStatus;","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"FilmsCard_link__-0Mgy\",\"activeLink\":\"FilmsCard_activeLink__ThzuE FilmsCard_link__-0Mgy\",\"filmsCard_box\":\"FilmsCard_filmsCard_box__-0XuS\",\"poster_box\":\"FilmsCard_poster_box__Qt+ul\",\"button\":\"FilmsCard_button__jOB+0\",\"button_img\":\"FilmsCard_button_img__sfMW3\",\"text_box\":\"FilmsCard_text_box__v15rb\"};","import { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from './FilmsCard.module.css';\r\n\r\nfunction FilmsCard({ propsForRender, url, onClick, location }) {\r\n    const { genres, overview, title, score, img, release } = propsForRender;\r\n\r\n    return (\r\n        <>\r\n            <div className={s.filmsCard_box}>\r\n                <div className={s.poster_box}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={s.button}\r\n                        onClick={onClick}\r\n                    >\r\n                        <img\r\n                            src=\"https://cdn-icons-png.flaticon.com/512/60/60577.png\"\r\n                            alt=\"go back\"\r\n                            width='10'\r\n                            hight=\"10\"\r\n                            className={s.button_img}\r\n                        />\r\n                        Go Back\r\n                    </button>\r\n                    <img src={img} alt={title} width='250'></img>\r\n                </div>\r\n                <div className={s.text_box}>\r\n                    <h2>{title} ({release})</h2>\r\n                    <p>User score: {score}</p>\r\n                    <h3>Overview</h3>\r\n                    <p>{overview}</p>\r\n                    <h3>Genres</h3>\r\n                    <p>{genres}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <NavLink\r\n                    to={{\r\n                        pathname: `${url}/cast`,\r\n                        state: {from: location?.state?.from ?? null}\r\n                    }}\r\n                    exact\r\n                    className={s.link}\r\n                    activeClassName ={s.activeLink}\r\n                >\r\n                    Cast\r\n                </NavLink>\r\n\r\n                <NavLink\r\n                    to={{\r\n                        pathname: `${url}/reviews`,\r\n                        state: { from: location?.state?.from ?? null}\r\n                    }}\r\n                    className={s.link}\r\n                    activeClassName ={s.activeLink}\r\n                >\r\n                    Reviews\r\n                </NavLink>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nFilmsCard.propTypes = {\r\n    propsForRender: PropTypes.shape({\r\n        genres: PropTypes.string.isRequired,\r\n        overview: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        score: PropTypes.string.isRequired,\r\n        img: PropTypes.string.isRequired,\r\n        release: PropTypes.string.isRequired\r\n    }),\r\n    url: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FilmsCard;","import { useState, useEffect, lazy, Suspense } from 'react';\r\nimport { Route, Switch, useParams, useRouteMatch, useLocation, useHistory } from 'react-router-dom';\r\nimport FilmsCard from '../components/FilmsCard/FilmsCard';\r\nimport Loader from '../components/Loader';\r\nimport * as filmLibraryApi from '../services/film-library-api';\r\nimport getStateMachineStatus from '../services/getStateMachineStatus';\r\n\r\nconst List = lazy(() => import('../components/List'  /* webpackChunkName \"List\" */));\r\n\r\nconst STATUS = getStateMachineStatus();\r\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\r\nconst DEFAULT_IMG = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ9Kf9kZ-VRf0wuP6QnKdra9fDBeqafqtjEas8WL2fwQdO0OZAG7AXN0wJZ9AkwQH2qL30&usqp=CAU';\r\n\r\nexport default function MoviesDetailsView() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { movieId } = useParams();\r\n    const { url, path } = useRouteMatch();\r\n    const [moviesDetails, setMoviesDetails] = useState({});\r\n    const [status, setStatus] = useState(STATUS.IDLE);\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        setStatus(STATUS.PENDING)\r\n        filmLibraryApi.fetchMovieById(movieId)\r\n            .then(({ genres, overview, title, vote_average, poster_path, release_date }) => {\r\n                setMoviesDetails(() => {\r\n                    return {\r\n                        genres: genres.map(({ name }) => name).join(\" \"),\r\n                        overview,\r\n                        title,\r\n                        score: `${vote_average * 10}%`,\r\n                        img: poster_path ? `${BASE_IMAGE_URL}${poster_path}` : `${DEFAULT_IMG}`,\r\n                        release: release_date.slice(0, 4)\r\n                    }\r\n                });\r\n                setStatus(STATUS.RESOLVE);\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n                setStatus(STATUS.REJECT)\r\n            })\r\n    }, [movieId]);\r\n\r\n    const onGoBack = () => {\r\n        history.push(location?.state?.from ?? '/movies')\r\n    }\r\n\r\n    return (\r\n        <>\r\n           {status === STATUS.RESOLVE &&\r\n             <>\r\n                <FilmsCard\r\n                    propsForRender={moviesDetails}\r\n                    url={url}\r\n                    onClick={onGoBack}\r\n                    location={location}\r\n                />\r\n                <Suspense fallback={<Loader/>}>\r\n                    <Switch>\r\n                        <Route path={`${path}/cast`} exact>\r\n                            <List movieId={movieId} details=\"cast\"/>\r\n                        </Route>\r\n\r\n                        <Route path={`${path}/reviews`}>\r\n                            <List movieId={movieId} details=\"reviews\"/>\r\n                        </Route>\r\n                    </Switch>\r\n                </Suspense>\r\n             </>\r\n            }\r\n            {status === STATUS.PENDING && <Loader />}\r\n            {status === STATUS.REJECT && <h2>{error}</h2>}\r\n        </>\r\n    );\r\n}"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchPopularMovies","fetchSearchMovies","query","fetchMovieById","movieId","fetchMoviesCast","fetchMoviesReviews","IDLE","PENDING","REJECT","RESOLVE","propsForRender","onClick","location","genres","overview","title","score","img","release","className","s","type","src","alt","width","hight","to","pathname","state","from","exact","activeClassName","List","lazy","STATUS","getStateMachineStatus","MoviesDetailsView","history","useHistory","useLocation","useParams","useRouteMatch","path","useState","moviesDetails","setMoviesDetails","status","setStatus","error","setError","useEffect","filmLibraryApi","then","vote_average","poster_path","release_date","map","name","join","slice","catch","message","push","Suspense","fallback","Loader","details"],"sourceRoot":""}